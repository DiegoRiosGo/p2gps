version: "3" 
services: # ahora se indican los servicios por el orden en que se quiere que se inicien.  prueba 2
#Por ejemplo, mongo debe estar antes de order. 
#mongo: mismo nombre usado en el run.sh de Order y application.properties. #Se resuelve en una direcci√≥n IP. 
  mongo:  
    image: diegoriosguerrero/p2gps:db 
    deploy: 
      replicas: 1 # para escabilidad del servicio.  
      resources: 
        limits: 
          cpus: "0.1" 
          memory: 200M 
      restart_policy: 
        condition: on-failure #reinicar el contenedor si falla 
    ports: 
      - "28017:28017" # mapeo el Puerto del contenedor (derecha) con el puerto  del host del servicio 
      - "27017:27017" 
    volumes: 
      - "db-data:/data/db" # para guardar en local los cambios en el contenedor 
  order: 
    image: paberlo/p2gps:order 
    depends_on: 
      - "mongo"  #le pasamos al servicio order la IP del servicio mongo 
    deploy: 
      replicas: 1 
      resources: 
        limits: 
          cpus: "0.6" 
          memory: 500M 
      restart_policy: 
        condition: on-failure 
    ports: 
      - "8080:8080" 
  web: 
    image: diegoriosguerrero/p2gps:web 
    deploy: 
      replicas: 1 
      resources: 
        limits: 
          cpus: "0.2" 
          memory: 300M 
      restart_policy: 
        condition: on-failure 
    ports: 
      - "80:8080"   
volumes:  
   db-data: 
